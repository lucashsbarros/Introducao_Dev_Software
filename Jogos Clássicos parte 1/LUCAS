LUCAS

PONG EM JAVA

Jogo ping pong em JS utilizando o www.editor.p5js.org

// variaveis da bolinha
let xBolinha = 300;
let yBolinha = 200;
let diametro = 20;
let raio = diametro / 2;


//velocidade das bolinhas
let velocidadeXbolinha = 4;
let velocidadeYbolinha = 4;
let raqueteComprimento = 10 ;
let raqueteAltura = 90;

// variaveis da raquete
let xRaquete = 5;
let yRaquete = 150


// variaveis do oponente
let xRaqueteOponente = 585;
let yRaqueteOponente = 150;
let velocidadeYOponente;



let colidiu = false;


//placar do jogo

let meusPontos = 0;
let pontosDoOponente = 0;

// sons do jogo 
let raquetada;
let ponto;
let trilha;

function preload(){
  trilha = loadSound("trilha,mp3");
  ponto = loadSound("ponto.mp3");
  raquetada = loadSound("raquetada.mp3");
}

function setup() {
  createCanvas(600, 400);
  trilha.loop();
}

function draw() {
  background(0);
  mostraBolinha();
  movimentaBolinha();
  verificaColisaoBorda();
  mostraRaquete(xRaquete, yRaquete);
  mostraRaqueteOponente(xRaqueteOponente, yRaqueteOponente);
  movimentaMinhaRaquete();
  verificaColisaoRaquete(xRaquete, yRaquete);
  movimentaRaqueteOponente();
  verificaColisaoRaquete(xRaqueteOponente, yRaqueteOponente);
  incluiPlacar();
  marcaPonto();
}



function mostraBolinha(){
  circle (xBolinha, yBolinha, diametro);
}

function movimentaBolinha(){
  //xBolinha = xBolinha + velocidadeXbolinha;
  xBolinha += velocidadeXbolinha;
  
  yBolinha = yBolinha + velocidadeYbolinha;
  //yBolinha += velocidadeYbolinha;
}

function verificaColisaoBorda(){
  if (xBolinha + raio > width || xBolinha - raio < 0 ){
     velocidadeXbolinha *= -1;
    /* xBolinha + raio > width 
    Posição X da bolinha está tocando no limite da altura da borda?
    Ou
    o X da bolinha com o raio está menor do que zero ? 
    
    Utilizamos a Variavel  MENOS o raio pra sabermos que é pra efetuar a verificação no LIMITE da bolinha e não no centro, se não considerar o RAIO os calculos serão verificados no CENTRO da bolinha
    
    
    */
  }
  if (yBolinha + raio > height || yBolinha - raio < 0){
    velocidadeYbolinha *= -1;
  }
}

function mostraRaquete(x,y){
   rect(x,y, raqueteComprimento, raqueteAltura);
}

function mostraRaqueteOponente(){
   rect(xRaqueteOponente,yRaqueteOponente , raqueteComprimento, raqueteAltura);
}

function movimentaMinhaRaquete(){
  if (keyIsDown (UP_ARROW)){
    yRaquete -= 10;
  }
  if (keyIsDown(DOWN_ARROW)){
    yRaquete += 10;
  }
} 
function verificaColisaoRaquete(){
  if(xBolinha - raio < xRaquete + raqueteComprimento && yBolinha - raio  < yRaquete + raqueteAltura && yBolinha + raio > yRaquete){
    velocidadeXbolinha *= -1;
    raquetada.play();
    
/* explicando cada condição (SAO 3)
1) xBolinha - raio < xRaquete + raqueteComprimento
verifica a colisao NO LIMITE da bolinha com a raquete, e não o centro. 

ESPECIFICA A ALTURA DA RAQUETE
2) yBolinha - raio  < yRaquete + raqueteAltura 
se não efetuar esse comando a bolinha vai voltar antes de colidir com o limite da area (que no nosso caso é 600) se a raquete estiver para baixo
da bolinha

3) yBolinha + raio > yRaquete
se não efetuar esse comando a bolinha vai voltar antes de colidir com o limite da area (que no nosso caso é 600) se a raquete estiver para CIMA da bolinha

*/
  }
}


function verificaColisaoRaquete(x,y){
  colidiu = collideRectCircle(x,y, raqueteComprimento, raqueteAltura, xBolinha, yBolinha, raio );
  
  if (colidiu){
    velocidadeXbolinha *= -1;
    raquetada.play();
  }
} 


function movimentaRaqueteOponente(){
  velocidadeYOponente = yBolinha -  yRaqueteOponente - raqueteComprimento /2 - 30;
  yRaqueteOponente += velocidadeYOponente;
  
}

function incluiPlacar(){
  stroke(255);
  textAlign(CENTER);
  textSize(16);
  fill(color(255,140,0));
  rect(130, 10 , 40, 20);
  fill(255);
  text(meusPontos,150, 26);
  fill(color(255,140,0))
  rect(430, 10 , 40, 20);
  fill(255);
  text(pontosDoOponente, 450, 26);
}

function marcaPonto(){
  if (xBolinha > 590){
    meusPontos += 1;
    ponto.play();
  }
  if (xBolinha < 10){
    pontosDoOponente += 1;
    ponto.play();
  }
}

